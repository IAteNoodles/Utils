from datetime import datetime


class Random:
    def __init__(self):
        self.system_time = datetime.now()
        self.state = self.system_time.time().microsecond  # The binary state of the input, on which the seed will be
        # generated. Taken as the current system time in microseconds.
        self.__SEED = 0b0000  # Stores the seed generated by LFSR
        self.__SEEDLET = 0b0000

    def linear_shift_feedback_register(self, new_state=0):
        if new_state != 0:
            self.state = new_state
        print("{:b}".format(self.state))
        for a in range(20):
            new_bit = ((self.state >> 1) ^ self.state) & 1
            self.state = self.state >> 1 | new_bit << 3
            self.__SEED = self.__SEED << 1 | new_bit
            self.__SEEDLET += new_bit
        print("{:b}".format(self.__SEED))
        if self.__SEEDLET > 6:
            self.__SEEDLET -= 6
        print("Random state: {:d}".format(self.__SEEDLET))


Random().linear_shift_feedback_register()
